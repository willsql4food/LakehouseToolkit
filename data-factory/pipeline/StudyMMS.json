{
	"name": "StudyMMS",
	"properties": {
		"activities": [
			{
				"name": "getPipelineParameters",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select 'POMHDR' tbl, '' notes\nunion select 'POMDTL', ''\nunion select 'POMDSQ', ''\nunion select 'POMXTK', '(this was previously an issue, may need some assistance with this one)'\nunion select 'EDAASNI', ''",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "WatermarkMI",
						"type": "DatasetReference",
						"parameters": {
							"dsServerName": {
								"value": "@pipeline().globalParameters.gpWMSQL",
								"type": "Expression"
							},
							"dsDatabaseName": {
								"value": "@pipeline().globalParameters.gpWMDatabase",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "getColumnList",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "getPipelineParameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "select \n  t.TABLE_CAT\n, t.TABLE_SCHEM\n, s.SCHEMA_TEXT\n, t.TABLE_NAME\n, t.TABLE_TYPE\n, t.REMARKS\n, t.TYPE_CAT\n, t.TYPE_SCHEM\n, t.TYPE_NAME as table_type_name\n, t.SELF_REFERENCING_COL_NAME\n, t.REF_GENERATION\n, t.DBNAME\n, t.TABLE_TEXT\n, c.COLUMN_NAME\n, c.DATA_TYPE\n, c.TYPE_NAME as column_type_name\n, c.COLUMN_SIZE\n, c.BUFFER_LENGTH\n, c.DECIMAL_DIGITS\n, c.NUM_PREC_RADIX\n, c.NULLABLE\n, c.REMARKS as column_remarks\n, c.COLUMN_DEF\n, c.SQL_DATA_TYPE\n, c.SQL_DATETIME_SUB\n, c.CHAR_OCTET_LENGTH\n, c.ORDINAL_POSITION\n, c.IS_NULLABLE\n, c.JDBC_DATA_TYPE\n, c.SCOPE_CATALOG\n, c.SCOPE_SCHEMA\n, c.SCOPE_TABLE\n, c.SOURCE_DATA_TYPE\n, c.PSEUDO_COLUMN\n, c.COLUMN_TEXT\n, c.SYSTEM_COLUMN_NAME\n, c.I_DATA_TYPE\n, c.HIDDEN\n, c.HAS_DEFAULT\n, c.SOURCE_TYPE_NAME\n, c.SOURCE_SQL_DATA_TYPE\n, c.SOURCE_JDBC_DATA_TYPE\n, '@{utcNow()}' as measure_time\nFROM sysibm.SQLTABLES t\njoin sysibm.SQLSCHEMAS s on s.TABLE_CAT = t.TABLE_CAT and s.TABLE_SCHEM = t.TABLE_SCHEM\njoin sysibm.SQLcolumns c on c.TABLE_CAT = t.TABLE_CAT and c.TABLE_SCHEM = t.TABLE_SCHEM and c.TABLE_NAME = t.TABLE_NAME\nwhere t.table_name in ('POMHDR' ,\n'POMDTL',\n'POMDSQ',\n'POMXTK',\n'EDAASNI')\nor t.table_name like 'INV%' and t.table_name not like '%DUPE%'",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Db2KV",
						"type": "DatasetReference",
						"parameters": {
							"dsKVBaseURL": {
								"value": "@pipeline().parameters.prmKVBaseURL",
								"type": "Expression"
							},
							"dsSecretName": {
								"value": "@pipeline().parameters.prmSecretName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DLBronzeParquetKVFile",
						"type": "DatasetReference",
						"parameters": {
							"dsURL": "https://staab09289802.dfs.core.windows.net",
							"dsSecretName": "key-staab09289802",
							"dsFileSystem": "datalake",
							"dsDirectory": {
								"value": "@{pipeline().parameters.prmPath}/Audit",
								"type": "Expression"
							},
							"dsFileName": "TableDefinitions.parquet",
							"dsKVBaseURL": {
								"value": "@pipeline().parameters.prmKVBaseURL",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "LoopTables",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "getTableList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('getTableList').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "SampleRows",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "Db2Source",
									"query": {
										"value": "select * from @{item().table_schem}.@{item().table_name} limit 100",
										"type": "Expression"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Db2KV",
									"type": "DatasetReference",
									"parameters": {
										"dsKVBaseURL": {
											"value": "@pipeline().parameters.prmKVBaseURL",
											"type": "Expression"
										},
										"dsSecretName": {
											"value": "@pipeline().parameters.prmSecretName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DLBronzeParquetKVFile",
									"type": "DatasetReference",
									"parameters": {
										"dsURL": "https://staab09289802.dfs.core.windows.net",
										"dsSecretName": "key-staab09289802",
										"dsFileSystem": "datalake",
										"dsDirectory": {
											"value": "@pipeline().parameters.prmPath",
											"type": "Expression"
										},
										"dsFileName": {
											"value": "@{item().table_schem}.@{item().table_name}.parquet",
											"type": "Expression"
										},
										"dsKVBaseURL": {
											"value": "@pipeline().parameters.prmKVBaseURL",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "CountRows",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "Db2Source",
									"query": {
										"value": "select '@{item().table_schem}' table_schema, '@{item().table_name}' table_name, count(*) num_rows, '@{utcNow()}' measure_time from @{item().table_schem}.@{item().table_name}",
										"type": "Expression"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Db2KV",
									"type": "DatasetReference",
									"parameters": {
										"dsKVBaseURL": {
											"value": "@pipeline().parameters.prmKVBaseURL",
											"type": "Expression"
										},
										"dsSecretName": {
											"value": "@pipeline().parameters.prmSecretName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DLBronzeParquetKV",
									"type": "DatasetReference",
									"parameters": {
										"dsURL": "https://staab09289802.dfs.core.windows.net",
										"dsSecretName": "key-staab09289802",
										"dsFileSystem": "datalake",
										"dsDirectory": {
											"value": "@{pipeline().parameters.prmPath}/Audit/Raw",
											"type": "Expression"
										},
										"dsKVBaseURL": {
											"value": "@pipeline().parameters.prmKVBaseURL",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "getTableList",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Skipped",
				"dependsOn": [
					{
						"activity": "getPipelineParameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": "select * FROM sysibm.SQLTABLES where table_name in ('POMHDR' ,\n'POMDTL',\n'POMDSQ',\n'POMXTK',\n'EDAASNI')"
					},
					"dataset": {
						"referenceName": "Db2KV",
						"type": "DatasetReference",
						"parameters": {
							"dsKVBaseURL": {
								"value": "@pipeline().parameters.prmKVBaseURL",
								"type": "Expression"
							},
							"dsSecretName": {
								"value": "@pipeline().parameters.prmSecretName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "MergeRowCounts",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LoopTables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"wildcardFolderPath": {
								"value": "@{pipeline().parameters.prmPath}/Audit/Raw",
								"type": "Expression"
							},
							"wildcardFileName": "*.parquet",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "ParquetReadSettings"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "MergeFiles"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DLBronzeParquetKV",
						"type": "DatasetReference",
						"parameters": {
							"dsURL": "https://staab09289802.dfs.core.windows.net",
							"dsSecretName": "key-staab09289802",
							"dsFileSystem": "datalake",
							"dsDirectory": {
								"value": "@{pipeline().parameters.prmPath}/Audit/Raw",
								"type": "Expression"
							},
							"dsKVBaseURL": {
								"value": "@pipeline().parameters.prmKVBaseURL",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DLBronzeParquetKVFile",
						"type": "DatasetReference",
						"parameters": {
							"dsURL": "https://staab09289802.dfs.core.windows.net",
							"dsSecretName": "key-staab09289802",
							"dsFileSystem": "datalake",
							"dsDirectory": {
								"value": "@{pipeline().parameters.prmPath}/Audit",
								"type": "Expression"
							},
							"dsFileName": {
								"value": "@{formatDateTime(utcNow(), 'yyyyMMdd-HHmm')}_row_counts.parquet",
								"type": "Expression"
							},
							"dsKVBaseURL": {
								"value": "@pipeline().parameters.prmKVBaseURL",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "getTimestamps",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Skipped",
				"dependsOn": [
					{
						"activity": "getPipelineParameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "Db2Source",
						"query": {
							"value": "select 'S10F8F6P' AS TABLE_CAT, 'AHLIB' AS TABLE_SCHEM, 'POMHDR' AS TABLE_NAME, 'PURCHASE ORDER HEADER FILE' AS TABLE_TEXT, 'POEDAT' AS COLUMN_NAME, 'Entry Date' AS COLUMN_TEXT\n, MIN(POEDAT) as MIN_DATE, MAX(POEDAT) AS MAX_DATE, '@{utcNow()}' AS MEASURE_TIME\nfrom AHLIB.POMHDR \nunion select 'S10F8F6P', 'AHLIB', 'POMHDR', 'PURCHASE ORDER HEADER FILE',     'POLCHG', 'Last Change Date'\n, MIN(POLCHG) as MIN_DATE, MAX(POLCHG), '@{utcNow()}'\nfrom AHLIB.POMHDR \nunion select 'S10F8F6P', 'MM760DVL', 'POMHDR', 'PURCHASE ORDER HEADER FILE',  'POEDAT', 'Entry Date' \n, MIN(POEDAT) as MIN_DATE, MAX(POEDAT), '@{utcNow()}'\nfrom MM760DVL.POMHDR \nunion select 'S10F8F6P', 'MM760DVL', 'POMHDR', 'PURCHASE ORDER HEADER FILE',  'POLCHG', 'Last Change Date'\n, MIN(POLCHG) as MIN_DATE, MAX(POLCHG), '@{utcNow()}'\nfrom MM760DVL.POMHDR \nunion select 'S10F8F6P', 'MM760LIB', 'POMHDR', 'PURCHASE ORDER HEADER FILE',  'POEDAT', 'Entry Date' \n, MIN(POEDAT) as MIN_DATE, MAX(POEDAT), '@{utcNow()}'\nfrom MM760LIB.POMHDR \nunion select 'S10F8F6P', 'MM760LIB', 'POMHDR', 'PURCHASE ORDER HEADER FILE',  'POLCHG', 'Last Change Date'\n, MIN(POLCHG) as MIN_DATE, MAX(POLCHG), '@{utcNow()}'\nfrom MM760LIB.POMHDR \nunion select 'S10F8F6P', 'MM760QAL', 'POMHDR', 'PURCHASE ORDER HEADER FILE',  'POEDAT', 'Entry Date' \n, MIN(POEDAT) as MIN_DATE, MAX(POEDAT), '@{utcNow()}'\nfrom MM760QAL.POMHDR \nunion select 'S10F8F6P', 'MM760QAL', 'POMHDR', 'PURCHASE ORDER HEADER FILE',  'POLCHG', 'Last Change Date'\n, MIN(POLCHG) as MIN_DATE, MAX(POLCHG), '@{utcNow()}'\nfrom MM760QAL.POMHDR \nunion select 'S10F8F6P', 'MMLIBARCH', 'POMHDR', 'PURCHASE ORDER HEADER FILE', 'POEDAT', 'Entry Date' \n, MIN(POEDAT) as MIN_DATE, MAX(POEDAT), '@{utcNow()}'\nfrom MMLIBARCH.POMHDR \nunion select 'S10F8F6P', 'MMLIBARCH', 'POMHDR', 'PURCHASE ORDER HEADER FILE', 'POLCHG', 'Last Change Date'\n, MIN(POLCHG) as MIN_DATE, MAX(POLCHG), '@{utcNow()}'\nfrom MMLIBARCH.POMHDR \nunion select 'S10F8F6P', 'POMRST910', 'POMHDR', 'PURCHASE ORDER HEADER FILE', 'POEDAT', 'Entry Date' \n, MIN(POEDAT) as MIN_DATE, MAX(POEDAT), '@{utcNow()}'\nfrom POMRST910.POMHDR \nunion select 'S10F8F6P', 'POMRST910', 'POMHDR', 'PURCHASE ORDER HEADER FILE', 'POLCHG', 'Last Change Date'\n, MIN(POLCHG) as MIN_DATE, MAX(POLCHG), '@{utcNow()}'\nfrom POMRST910.POMHDR \nunion select 'S10F8F6P', 'MM760LIB', 'POMXTK', 'PO Reason Code trackingfile', 'TKDATE', 'Tracking Date' \n, MIN(TKDATE) as MIN_DATE, MAX(TKDATE), '@{utcNow()}'\nfrom MM760LIB.POMXTK \n",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Db2KV",
						"type": "DatasetReference",
						"parameters": {
							"dsKVBaseURL": {
								"value": "@pipeline().parameters.prmKVBaseURL",
								"type": "Expression"
							},
							"dsSecretName": {
								"value": "@pipeline().parameters.prmSecretName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DLBronzeParquetKVFile",
						"type": "DatasetReference",
						"parameters": {
							"dsURL": "https://staab09289802.dfs.core.windows.net",
							"dsSecretName": "key-staab09289802",
							"dsFileSystem": "datalake",
							"dsDirectory": {
								"value": "@{pipeline().parameters.prmPath}/Audit",
								"type": "Expression"
							},
							"dsFileName": {
								"value": "@{formatDateTime(utcNow(), 'yyyyMMdd-HHmm')}_date_ranges.parquet",
								"type": "Expression"
							},
							"dsKVBaseURL": {
								"value": "@pipeline().parameters.prmKVBaseURL",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"prmKVBaseURL": {
				"type": "string",
				"defaultValue": "https://akv-ab092898.vault.azure.net/"
			},
			"prmSecretName": {
				"type": "string",
				"defaultValue": "MMS-PROD"
			},
			"prmPath": {
				"type": "string",
				"defaultValue": "bronze/MMS_PROD"
			}
		},
		"annotations": []
	}
}